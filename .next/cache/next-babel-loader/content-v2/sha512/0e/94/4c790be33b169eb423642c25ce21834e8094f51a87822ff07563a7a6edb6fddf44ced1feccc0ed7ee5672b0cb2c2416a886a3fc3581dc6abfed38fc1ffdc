{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Bruna/moveit-next/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActoveChallenge\n  } = useState(null);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/Users/Bruna/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActoveChallenge","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAcA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAE,EAAF,CAAvC;AAEP,OAAO,SAASI,kBAAT,CAA4B;AAACC,EAAAA;AAAD,CAA5B,EAAkE;AAClE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;AAEA,QAAM;AAAA,OAACW,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,IAAD,CAAtD;;AACA,WAASa,OAAT,GAAmB;AACjBP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASS,iBAAT,GAA6B;AAC5B,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,UAAU,CAACkB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGnB,UAAU,CAACc,oBAAD,CAA5B;AACA;;AAEJ,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACHV,MAAAA,KADG;AAEHE,MAAAA,iBAFG;AAGHE,MAAAA,mBAHG;AAIHI,MAAAA,OAJG;AAKFC,MAAAA;AALE,KADT;AAAA,cAQKV;AARL;AAAA;AAAA;AAAA;AAAA,UADF;AAYH","sourcesContent":["import {createContext, useState, ReactNode} from 'react';\nimport challenges from '../../challenges.json';\n\n\ninterface ChallengesContextData {\n  level: number;\n  currentExperience: number;\n  challengesCompleted: number;\n  levelUp: () => void;\n  startNewChallenge: () => void;\n}\ninterface ChallengesProviderProps{\n    children: ReactNode;\n}\n\nexport const ChallengesContext = createContext ({} as ChallengesContextData);\n\nexport function ChallengesProvider({children} : ChallengesProviderProps) {\n       const [level, setLevel] = useState(1);\n       const [currentExperience, setCurrentExperience] = useState(0);\n       const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n       const [activeChallenge, setActoveChallenge] = useState(null)\n       function levelUp() {\n         setLevel(level + 1);\n       }\n       \n       function startNewChallenge (){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex];\n       }\n\n    return (\n      <ChallengesContext.Provider\n        value={{ \n            level, \n            currentExperience,\n            challengesCompleted,\n            levelUp,\n             startNewChallenge }}\n          >\n          {children}\n      </ChallengesContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}