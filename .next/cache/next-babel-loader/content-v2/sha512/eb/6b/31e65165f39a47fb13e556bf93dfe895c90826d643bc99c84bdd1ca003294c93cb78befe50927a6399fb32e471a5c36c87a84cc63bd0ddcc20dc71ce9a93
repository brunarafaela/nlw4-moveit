{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/Bruna/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/Bruna/moveit-next/src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, \"0\").split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    setIsActive(false);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Countdown, \"+53wmqoX4V3Ifau3/LttFDURbeg=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/Users/Bruna/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdown","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACDH,QAAQ,CAAC,IAAI,EAAL,CADP;AAAA,MAClBI,IADkB;AAAA,MACZC,OADY;;AAAA,mBAEQL,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEjBM,QAFiB;AAAA,MAEPC,WAFO;;AAKxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AANwB,8BAQUQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CARV;AAAA;AAAA,MAQjBC,UARiB;AAAA,MAQLC,WARK;;AAAA,+BASUJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CATV;AAAA;AAAA,MASjBG,UATiB;AAAA,MASLC,WATK;;AAWxB,WAASC,cAAT,GAA0B;AACtBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASa,cAAT,GAAyB;AACrBb,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBiB,MAAAA,UAAU,CAAC,YAAM;AACfhB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACoB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGZ,QAAQ,gBACP;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,YAAKJ,MAAM,CAACqB,eAAZ,cAA+BrB,MAAM,CAACsB,qBAAtC,CAFX;AAGE,MAAA,OAAO,EAAEJ,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBASP;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAElB,MAAM,CAACqB,eAFpB;AAGE,MAAA,OAAO,EAAEJ,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCH;;GA7DehB,S;;KAAAA,S","sourcesContent":["import {useState, useEffect} from 'react';\nimport styles from '../styles/components/Countdown.module.css';\n\nexport function Countdown() {\n    const[time, setTime] = useState(1 * 60)\n    const [isActive, setIsActive] = useState(false);\n\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n    function startCountdown() {\n        setIsActive(true);\n    }\n\n    function resetCountdown(){\n        setIsActive(false);\n    }\n\n    useEffect(() => {\n      if (isActive && time > 0) {\n        setTimeout(() => {\n          setTime(time - 1);\n        }, 1000);\n      }\n    }, [isActive, time]);\n\n    return (\n      <div>\n        <div className={styles.countdownContainer}>\n          <div>\n            <span>{minuteLeft}</span>\n            <span>{minuteRight}</span>\n          </div>\n          <span>:</span>\n          <div>\n            <span>{secondLeft}</span>\n            <span>{secondRight}</span>\n          </div>\n        </div>\n\n        {isActive ? (\n          <button\n            type=\"button\"\n            className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n            onClick={resetCountdown}\n          >\n            Abandonar ciclo\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={styles.countdownButton}\n            onClick={startCountdown}\n          >\n            Iniciar um ciclo\n          </button>\n        )}\n      </div>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}